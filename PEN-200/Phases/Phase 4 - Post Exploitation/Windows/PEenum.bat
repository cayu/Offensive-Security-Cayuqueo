@echo off

echo ################## systeminfo >> output.txt
systeminfo >> output.txt
echo. >> output.txt

echo ################## Environment Variables >> output.txt
SET >> output.txt
echo. >> output.txt

echo ################## Hostname > output.txt
hostname >> output.txt
echo. >> output.txt

echo ################## whoami >> output.txt
whoami >> output.txt
echo. >> output.txt

echo ################## whoami /groups >> output.txt
whoami /groups >> output.txt
echo. >> output.txt

echo ################## whoami /priv >> output.txt
whoami /priv >> output.txt
echo. >> output.txt

echo ################## whoami /all >> output.txt
whoami /all >> output.txt
echo. >> output.txt

echo ################## echo %%USERNAME%% >> output.txt
echo %USERNAME% >> output.txt
echo. >> output.txt

echo ################## net users >> output.txt
net users >> output.txt
echo. >> output.txt

echo ################## net accounts >> output.txt
net accounts >> output.txt
echo. >> output.txt

echo ################## net localgroup >> output.txt
net localgroup >> output.txt
echo. >> output.txt

echo ################## net localgroup administrators >> output.txt
net localgroup administrators >> output.txt
echo. >> output.txt

echo ################## net user %%USERNAME%% >> output.txt
net user %USERNAME% >> output.txt
echo. >> output.txt

echo ################## Searching Registry for Passwords --- >> output.txt
echo ################## reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon" 2>nul | findstr "DefaultUserName DefaultDomainName DefaultPassword"  >> output.txt
reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon" 2>nul | findstr "DefaultUserName DefaultDomainName DefaultPassword"  >> output.txt
echo ################## reg query HKLM /f password /t REG_SZ /s /k >> output.txt
reg query HKLM /f password /t REG_SZ /s /k >> output.txt
echo ################## reg query HKCU /f password /t REG_SZ /s /k >> output.txt
reg query HKCU /f password /t REG_SZ /s /k >> output.txt
echo ################## reg query "HKCU\Software\ORL\WinVNC3\Password"  >> output.txt
reg query "HKCU\Software\ORL\WinVNC3\Password"  >> output.txt
echo ################## reg query "HKLM\SYSTEM\Current\ControlSet\Services\SNMP"  >> output.txt
reg query "HKLM\SYSTEM\Current\ControlSet\Services\SNMP"  >> output.txt
echo ################## reg query "HKCU\Software\SimonTatham\PuTTY\Sessions"  >> output.txt
reg query "HKCU\Software\SimonTatham\PuTTY\Sessions"  >> output.txt
echo. >> output.txt

echo ################## AlwaysInstallElevated Check >> output.txt
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated >> output.txt
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated >> output.txt
echo. >> output.txt

echo ################## Stored Passwords >> output.txt
echo ################## To use stored cmdkey credentials use runas with /savecred flag (e.g. runas /savecred /user:ACCESS\Administrator "ping 10.10.10.9") >> output.txt
cmdkey /list >> output.txt
echo. >> output.txt

echo ################## fsutil fsinfo drives >> output.txt
echo ################## (shows mounted drives) >> output.txt
fsutil fsinfo drives >> output.txt
echo. >> output.txt

echo ################## path >> output.txt
echo %PATH% >> output.txt
echo. >> output.txt

echo ################## tasklist /SVC >> output.txt
tasklist /SVC >> output.txt
echo. >> output.txt

echo ################## tasklist /v >> output.txt
tasklist /v >> output.txt
echo. >> output.txt

echo ################## Checking if .msi files are always installed with elevated privlidges>> output.txt
echo ################## NOTE: Both values below must be 1 >> output.txt
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated /v AlwaysInstallElevated >> output.txt
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated /v AlwaysInstallElevated >> output.txt
echo. >> output.txt

echo #### Checking for backup SAM files >> output.txt

echo #### dir %SYSTEMROOT%\repair\SAM >> output.txt
dir %SYSTEMROOT%\repair\SAM >> output.txt

echo #### dir %SYSTEMROOT%\system32\config\regback\SAM >> output.txt
dir %SYSTEMROOT%\system32\config\RegBack\SAM >> output.txt
echo. >> output.txt

dir %SYSTEMROOT%\repair\SAM 2>nul

dir %SYSTEMROOT%\System32\config\SAM 2>nul
dir %SYSTEMROOT%\repair\system 2>nul
dir %SYSTEMROOT%\System32\config\SYSTEM 2>nul
dir %SYSTEMROOT%\System32\config\RegBack\system 2>nul
dir /a /b /s SAM.b*
echo.

echo ##################################################### >> output.txt
echo ################## Checking for possible creds >> output.txt
echo ##################################################### >> output.txt

echo ################## type c:\sysprep.inf >> output.txt
type c:\sysprep.inf >> output.txt
echo. >> output.txt

echo ################## type c:\sysprep\sysprep.xml>> output.txt
type c:\sysprep\sysprep.xml >> output.txt
echo. >> output.txt

echo ##################################################### >> output.txt
echo ################## Network Information >> output.txt
echo ##################################################### >> output.txt

echo ################## ipconfig /all >> output.txt
ipconfig /all >> output.txt
echo. >> output.txt

echo ################## net use (view current connetions) >> output.txt
net use >> output.txt
echo. >> output.txt

echo ################## net share (view shares) >> output.txt
net share >> output.txt
echo. >> output.txt

echo ################## arp -a >> output.txt
arp -a >> output.txt
echo. >> output.txt

echo ################## route print>> output.txt
route print >> output.txt
echo. >> output.txt

echo ################## netstat -nao >> output.txt
netstat -nao >> output.txt
echo. >> output.txt

echo ################## netsh firewall show state >> output.txt
netsh firewall show state >> output.txt
echo. >> output.txt

echo ################## netsh firewall show config >> output.txt
netsh firewall show config >> output.txt
echo. >> output.txt

echo ################## netsh wlan export profile key=clear >> output.txt
echo ################## Shows wireless network information>> output.txt
netsh wlan export profile key=clear
type wi-fi*.xml >> output.txt
del wi-fi*.xml
echo. >> output.txt

echo ##################################################### >> output.txt
echo ################## Scheduled Tasks >> output.txt
echo ##################################################### >> output.txt


echo ################## Scheduled Tasks Names Only >> output.txt
echo ################## schtasks /query /fo LIST 2>nul | findstr "TaskName" >> output2.txt
schtasks /query /fo LIST 2>nul | findstr "TaskName"  >> output.txt
echo. >> output.txt

echo ################## Scheduled Tasks Details >> output.txt
echo ################## schtasks /query /fo LIST /v >> output.txt
schtasks /query /fo LIST /v >> output.txt
echo. >> output.txt

echo ################## net start >> output.txt
net start >> output.txt
echo. >> output.txt

echo ################## DRIVERQUERY >> output.txt
DRIVERQUERY >> output.txt
echo. >> output.txt

echo ##################################################### >> output.txt
echo ################## Any mentions of "password" in the registry >> output.txt
echo ##################################################### >> output.txt

reg query HKLM /f password  /t REG_SZ  /s >> output.txt

echo. >> output.txt

echo #####################################################  >> output.txt
echo ################## Checks which don't output to a file!!!! >> output.txt
echo #####################################################  >> output.txt
echo. >> output.txt
echo ################## Checking for services which arn't properly quoted >> output.txt
echo ################## Reference http://toshellandback.com/2015/11/24/ms-priv-esc/ >> output.txt
echo ################## wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:\windows\\" | findstr /i /v """  >> output.txt
wmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:\windows\\" | findstr /i /v """ >> output.txt
echo ################## sc query state= all >> output.txt
sc query state= all >> output.txt
echo. >> output.txt


echo ################## Powershell existence/version check >> output.txt
echo REG QUERY "HKLM\SOFTWARE\Microsoft\PowerShell\1\PowerShellEngine" /v PowerShellVersion >> output.txt
REG QUERY "HKLM\SOFTWARE\Microsoft\PowerShell\1\PowerShellEngine" /v PowerShellVersion >> output.txt
echo. >> output.txt

echo ################## Programs that run at startup >> output.txt
echo ################## wmic startup get caption,command >> output.txt
wmic startup get caption,command >> output.txt
echo. >> output.txt

echo ################## Patches (also listed as part of systeminfo)  >> output.txt
:: Note on some legacy Windows editions WMIC may fail to install/start/freeze in which case you'll need to comment out any calls to wmic
:: Systeminfo may at times fail to list all patches (instead showing 'file x' or something along those lines) in which case its important to have this fallback.
wmic qfe get Caption,Description,HotFixID,InstalledOn  >> output.txt
echo. >> output.txt


echo ################## Checking for files with pass, cred, vnc or .config in the name > dir_output.txt

echo ################## dir /s *pass* #######################################################  >> dir_output.txt
dir /s *pass*  >>dir_output.txt

echo ################## dir /s *cred* #######################################################  >> dir_output.txt
dir /s *cred*  >>dir_output.txt

echo ################## dir /s *vnc*  ####################################################### >> dir_output.txt
dir /s *vnc*  >>dir_output.txt

echo ################## dir /s *.config #####################################################  >> dir_output.txt
dir /s *.config  >>dir_output.txt

echo ################## Starting broad search in the background for any files with the word password in it  >> dir_output.txt
echo start /b findstr /sim password *.xml *.ini *.txt *.config *.bak 2>nul >> dir_output.txt
start /b findstr /sim password *.xml *.ini *.txt *.config *.bak 2>nul >>dir_output.txt

echo ################## Checking for files with possible creds >> dir_output.txt
echo ################## Reference: http://rewtdance.blogspot.com/2012/06/exploiting-windows-2008-group-policy.html >> dir_output.txt

echo ################## dir /s groups.xml  >> dir_output.txt
dir /s groups.xml  >>dir_output.txt

echo ################## dir /s ScheduledTasks.xml   >> dir_output.txt
dir /s ScheduledTasks.xml  >>dir_output.txt

echo ################## dir /s printers.xml   >> dir_output.txt
dir /s printers.xml  >>dir_output.txt

echo ################## dir /s drives.xml   >> dir_output.txt
dir /s drives.xml  >>dir_output.txt

echo ################## dir /s DataSources.xml  >> dir_output.txt
dir /s DataSources.xml  >>dir_output.txt

echo ################## dir /s web.config  >> dir_output.txt
dir /s web.config  >>dir_output.txt

echo. >> dir_output.txt

echo ################## Checking for unattended install files >> dir_output.txt

echo ################## dir /s unattended.xml  >> dir_output.txt
dir /s unattended.xml  >>dir_output.txt

echo ################## dir /s unattend.xml  >> dir_output.txt
dir /s unattend.xml  >>dir_output.txt

echo ################## dir /s unattend.txt  >> dir_output.txt
dir /s unattend.txt >>dir_output.txt

echo ################## dir /s autounattend.xml  >> dir_output.txt
dir /s autounattend.xml >>dir_output.txt

echo ################## dir /s sysprep.inf  >> dir_output.txt
dir /s sysprep.inf >>dir_output.txt

echo ################## dir /s sysprep.xml  >> dir_output.txt
dir /s sysprep.xml >>dir_output.txt

echo ################## Creating a tree of the c:\ drive >> dir_output.txt
echo ################## Ouput to "output_of_tree.txt file" >> dir_output.txt

echo ################## Inetpub (any config files in here? May need to manually drill into this folder if it exists) >> dir_output.txt
:: The root web folder can at times be extensive, and thus we do not always want to show a recursive listing of its contents in this script but it should always be investigated regardless.
dir /a /b C:\inetpub\  >> dir_output.txt

echo ################## Broad search for Apache or Xampp  >> dir_output.txt
dir /s /b apache* xampp* >> dir_output.txt

echo ################## Broad search for vnc kdbx or rdp files  >> dir_output.txt
dir /a /s /b *.kdbx *vnc.ini *.rdp >> dir_output.txt

echo ################## Program Files and User Directories where everybody (or users) have full or modify permissions  >> dir_output.txt
icacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Documents and Settings\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Documents and Settings\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Documents and Settings\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Documents and Settings\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Users\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Users\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Users\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
icacls "C:\Users\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Documents and Settings\*" /T 2>nul | findstr ":F" | findstr "BUILTIN\Users"   >> dir_output.txt
icacls "C:\Users\*" /T 2>nul | findstr ":F" | findstr "BUILTIN\Users"   >> dir_output.txt
echo. >> dir_output.txt
echo ################## Performing same checks but using cacls instead of icacls (for older versions of Windows)   >> dir_output.txt
cacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Program Files\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Program Files (x86)\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Program Files\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Program Files (x86)\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Documents and Settings\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Documents and Settings\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Documents and Settings\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Documents and Settings\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Users\*" 2>nul | findstr "(F)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Users\*" 2>nul | findstr "(F)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Users\*" 2>nul | findstr "(M)" | findstr "Everyone"   >> dir_output.txt
cacls "C:\Users\*" 2>nul | findstr "(M)" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Documents and Settings\*" /T 2>nul | findstr ":F" | findstr "BUILTIN\Users"   >> dir_output.txt
cacls "C:\Users\*" /T 2>nul | findstr ":F" | findstr "BUILTIN\Users"   >> dir_output.txt
echo. >> dir_output.txt


echo ################## Search for Quick Wins >> dir_output.txt
echo ################## Listing contents of user directories >> dir_output.txt
:: In CTF machines it is VERY common for there to be artifacts used for privilege escalation within user directories. Pay special attention for files that may contain credentials, or files that maybe used as part of a scheduled task. 
dir "C:\Users\" /a /b /s 2>nul | findstr /v /i "Favorites\\" | findstr /v /i "AppData\\" | findstr /v /i "Microsoft\\" |  findstr /v /i "Application Data\\" >> dir_output.txt
dir "C:\Documents and Settings\" /a /b /s 2>nul | findstr /v /i "Favorites\\" | findstr /v /i "AppData\\" | findstr /v /i "Microsoft\\" |  findstr /v /i "Application Data\\" >> dir_output.txt
echo. >> dir_output.txt

echo ################## Exploring program directories and C:\ >> dir_output.txt
:: These directory listings are not recursive. They are meant to give you a general overview of the programs installed on the system. Searchsploit every (non default/windows) program version, and check each program config for creds. 
echo --- Program Files --- >> dir_output.txt
dir "C:\Program Files" /b >> dir_output.txt
echo --- Program Files (x86) --- >> dir_output.txt
dir "C:\Program Files (x86)" /b >> dir_output.txt
echo --- Root of C:\ ---- >> dir_output.txt
dir "C:\" /b >> dir_output.txt
echo. >> dir_output.txt

echo ################## Search for Configuration and sensitive files >> dir_output.txt
echo ################## Broad search for config files >> dir_output.txt
:: If the .NET framework is installed you will get a bunch of config files which are typically default and can be ignored. The more you practice priv esc. the more youll learn which files can be ignored, and which you should give a closer eye to.
dir /s /b php.ini httpd.conf httpd-xampp.conf my.ini my.cnf web.config >> dir_output.txt
echo -- Application Host File -- >> dir_output.txt
type C:\Windows\System32\inetsrv\config\applicationHost.config 2>nul >> dir_output.txt
echo -- Broad search for unattend or sysprep files -- >> dir_output.txt
dir /b /s unattended.xml* sysprep.xml* sysprep.inf* unattend.xml* >> dir_output.txt
echo. >> dir_output.txt

tree C:\ /f /a > tree_output.txt
